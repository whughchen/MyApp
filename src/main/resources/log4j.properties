# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# An example log4j configuration file that outputs to System.out.  The
# output information consists of relative time, log level, thread
# name, logger name, nested diagnostic context and the message in that
# order.

# For the general syntax of property based configuration files see the
# documenation of org.apache.log4j.PropertyConfigurator.

#log4j.rootLogger=DEBUG, A1
log4j.rootLogger=debug,infofile,errorlogfile,stdout
#log4j.logger.export=INFO,R1
#log4j.logger.import=INFO,R2
#log4j.logger.delete=INFO,R3

# A1 is set to be a ConsoleAppender which outputs to System.out. 
log4j.appender.A1=org.apache.log4j.ConsoleAppender

# A1 uses PatternLayout.
log4j.appender.A1.layout=org.apache.log4j.PatternLayout

# The conversion pattern uses format specifiers. You might want to
# change the pattern an watch the output format change.
log4j.appender.A1.layout.ConversionPattern=%-4r %-5p [%t] %37c %3x - %m%n

# In this example, we are not really interested in INNER loop or SWAP
# messages. See the effects of uncommenting and changing the levels of
# the following loggers.
# log4j.logger.org.apache.log4j.examples.SortAlgo.INNER=WARN
# log4j.logger.org.apache.log4j.examples.SortAlgo.SWAP=WARN

log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target = System.out
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern =%d{yyyy-MM-dd HH:mm:ss}[%-5p][%t] %l (%F:%L):%m%n


#infofile
log4j.appender.infofile = org.apache.log4j.DailyRollingFileAppender
log4j.appender.infofile.Threshold = INFO
log4j.appender.infofile.File = ./log/loginfo.log
log4j.appender.infofile.Append = true
log4j.appender.infofile.ImmediateFlush = true 
log4j.appender.infofile.DatePattern = '_'yyyyMMdd'.log ' 
log4j.appender.infofile.layout = org.apache.log4j.PatternLayout
log4j.appender.infofile.layout.ConversionPattern =%d{yyyy-MM-dd HH:mm:ss}[%-5p][%t] %M (%F:%L):%m%n

#error
log4j.appender.errorlogfile = org.apache.log4j.RollingFileAppender
log4j.appender.errorlogfile.Threshold = ERROR
log4j.appender.errorlogfile.File = ./log/logerror.log
log4j.appender.errorlogfile.Append = true 
log4j.appender.errorlogfile.MaxFileSize=10240KB 
log4j.appender.errorlogfile.layout = org.apache.log4j.PatternLayout
log4j.appender.errorlogfile.layout.ConversionPattern =%d{yyyy-MM-dd HH:mm:ss}[%-5p][%t] %M (%F:%L):%m%n 

#log4j.logger.druid.sql=stdout
#log4j.logger.druid.sql.DataSource=stdout
#log4j.logger.druid.sql.Connection=stdout
#log4j.logger.druid.sql.Statement=stdout
#log4j.logger.druid.sql.ResultSet=stdout
 